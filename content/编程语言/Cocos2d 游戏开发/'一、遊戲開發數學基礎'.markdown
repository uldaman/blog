author: Martin
date: 2015-06-15 17:08
title: 一、遊戲開發數學基礎(坐标系、向量、矩阵)

**笛卡爾坐標系**

笛卡爾坐標系有 1D、2D、3D 三種, 因為我們要學的 cocos2d-x 是基於 2D 的, 因此, 我們主要討論 2D 笛卡爾坐標系.

2D 笛卡爾坐標系 就是我們中學學過的 x/y 坐標系, 當然也稍有不同.

首先, 在 2D 笛卡爾坐標系 中, 根據 x/y 的方向不同有 8 種不同的坐標系方案.
![](http://i58.tinypic.com/2rppn5e.jpg)

在 cocos2d-x 中, 我們使用的是最早中學接觸過的那種:
![](http://i58.tinypic.com/2upeek7.jpg)
坐標系的原點對應屏幕左下角.

* * *



多坐標系

簡單的理解就是, 我們以屏幕左下角的坐標系為世界坐標系, 然後, 在我們的”世界”中, 可能會存在某個物體, 例如一個人(2D 平面), 那麼以人的左下角為原點又會形成一個坐標系, 我們稱它為物體坐標系, 那麼人的眼睛針對物體坐標系就會有一個物體坐標, 針對世界坐標系又會有一個世界坐標.
![](http://i58.tinypic.com/2ldzjv8.jpg)
如此圖, 我們把中間的紅框想像成人, 紅點想像成眼睛, 人的世界坐標是(3, 3), 眼睛的物體坐標是(1, 1), 當然, 世界坐標坐標系與物體坐標是可以互轉的.

* * *

**向量**

向量是指一個同時具有大小和方向的幾何對象;

向量和坐標系一樣, 也有很多維度, 這裡主要學習 2D 向量.

向量和點的表示方法相同(x, y), 但是表達的意義相差千里, 點表示位置, 而向量表示的是**位移**.
如向量 [3, 4], 它表示的就是沿這個方向移動 5 個位置(勾股定律).
![](http://i58.tinypic.com/n2k2mo.jpg)

**向量的長度(又叫大小、模)的計算**
![](http://i60.tinypic.com/2l54ar.jpg)
如上一個例子, 向量 [3, 4], 它的模套用此公式就是 [(3 的平方 + 4 的平方) 再開方], 結果就是 5, 當然, 如果只是 2D 向量的話, 就是簡單的勾股定律.

有一種特殊的向量叫**單位向量**(又叫標準化向量), 單位向量指模為 1 的向量, 這種向量表示我們只關心它的方向, 而不關心它的大小.
我們可以通過公式, 把一個向量轉換成標準化向量.
![](http://i58.tinypic.com/2gxpnyq.jpg)
例如, 把 [12, -5] 標準化:
![](http://i60.tinypic.com/b54s4i.jpg)
這裡用到了向量的除法, 簡單說明下, **向量與標量的乘除就是把向量的每個元素分別與標量進行乘除**.

**向量與向量的加減法
**![](http://i62.tinypic.com/1zyvh1s.jpg)
需要注意的是結果向量的方向:
![](http://i61.tinypic.com/16baiqw.jpg)
![](http://i60.tinypic.com/1zv66h1.jpg)

**向量的乘法
**向量很怪異, 它分為點乘(a·b)和叉乘(axb).

先看**點乘**, 向量間的點乘結果是一個標量, 公式如下:
![](http://i60.tinypic.com/15ftcfm.jpg)

另外還有個公式:
![](http://i58.tinypic.com/2ivcqhu.jpg)
這兩個公式一結合, 我們就有了一個點乘的重要應用 -- 求兩向量夾角.
![](http://i58.tinypic.com/5fhevq.jpg)

在某些情況下, 我們可能只需要判斷下這個夾角的範圍, 而不需要具體角度, 這裡可以通過點乘的正負來快速判斷.
![](http://i57.tinypic.com/2lsdt7k.jpg)

再來看一上向量的叉乘, 它的公式很複雜:
![](http://i62.tinypic.com/2dvpq9h.jpg)
可以看到, 結果是另外一個向量;
它的是幾何意義是, 結果向量與相乘兩向量構成的平面垂直.
![](http://i61.tinypic.com/sy5mc8.jpg)
這已經涉及到 3D 數學的知識, 暫不討論.

* * *

**矩阵**

向量可以说是標量的数组, 而矩阵则是向量的数组.

矩阵可以有很多行很多列, 这里接触一下 3*3 方阵(行數 == 列數)就可以了.
![](http://i59.tinypic.com/15xvpud.jpg)

**單位矩陣**, 對角線上的元素為 1, 其實為 0.
![](http://i61.tinypic.com/359ejh2.jpg)

**轉置**(行列互換)
![](http://i57.tinypic.com/35d2t0p.jpg)(D 表示單位矩陣, D 的轉置還是 D)

標量與矩陣的乘法也是拿標量與矩陣的每個元素相乘.

**矩陣間的乘法**就比較複雜的了:
首先, 兩個矩陣要滿足一定的條件才能相乘, 即第一個矩陣的列數 等於 第二個矩陣的行數才能相乘.
![](http://i58.tinypic.com/ob0b4m.jpg)
可以看到, 結果矩陣的行數是第一個矩陣的行數, 列數是第二個矩陣的列數.
接下來, 看一下具體的乘法規則:
![](http://i62.tinypic.com/2rm3vhs.jpg)

c24 = a21*b14 + a22*b24 (點乘)

矩陣的乘法有一些規則, 可以了解下:
![](http://i59.tinypic.com/2agjkle.jpg)

**向量與方陣的乘法**:
![](http://i61.tinypic.com/29as7rt.jpg)
這其實也是一種特殊的矩陣間相乘, 首先, 向量是一行三列的, 矩陣是三行三列的, 向量列數==矩陣的行數, 因此, 它們可以相乘, 結果是一個新向量.
列向量也是可以與方陣相乘的, 但是它就必須在矩陣的右邊:
![](http://i61.tinypic.com/54evyx.jpg)

講了這麼多矩陣, 其實在 2D 遊戲中, 我們用到最多的就是行向量與方陣相乘, 它被用來**進行向量的變換**.

矩陣的幾何解釋:
![](http://i60.tinypic.com/4zw5mf.jpg)
如圖, 一開始 p[1, 0], 經過方陣的轉換, 結果為 [1*2+0*(-1), 1*1+0*2] = [2, 1], q 同理.
如果, 我們把 p、q 向量看成一個平面, 那麼這其實完成的是平面的變換:
![](http://i57.tinypic.com/2ljlyf9.jpg)

**那麼問題來了, 現在已經知道, 已經一個旋轉矩陣就能對向量進行旋轉, 那麼假如想把一個向量順時針旋轉30度, 該怎麼得到這個旋轉矩陣呢?**
根據三角函數, 可以得到下圖:
![](http://i59.tinypic.com/soqrde.jpg)
![](http://i57.tinypic.com/k4h6xu.jpg)

當然, 關於數學知識不止這麼多, 等我以後用到了, 再添加進來(例如矩陣就還有縮放、投影、鏡像等).
ss?
